#
# This is an example of a high security, somewhat compatible TLSv1 (and TLSv1.1 & TLSv1.2)
# enabled HTTPS server. The server requires modes that provide perfect forward
# secrecy. Anonymous cipher modes are disabled. This
# configuation also includes the HSTS header to ensure that users do not
# accidentally connect to an insecure HTTP service after their first visit. The
# HSTS header is set to expire after six earth months.
#
# Supported Server Cipher(s):
#
# TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (0xc030)   ECDH 256 bits (eq. 3072 bits RSA)   FS 256
# TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (0xc02f)   ECDH 256 bits (eq. 3072 bits RSA)   FS 128
# TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 (0xc028)   ECDH 256 bits (eq. 3072 bits RSA)   FS 256
# TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 (0xc027)   ECDH 256 bits (eq. 3072 bits RSA)   FS 128
# TLS_ECDHE_RSA_WITH_RC4_128_SHA (0xc011)   ECDH 256 bits (eq. 3072 bits RSA)   FS    128
# TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (0xc014)   ECDH 256 bits (eq. 3072 bits RSA)   FS    256
# TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (0xc013)   ECDH 256 bits (eq. 3072 bits RSA)   FS    128
# TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (0x9f)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS  256
# TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 (0x6b)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS  256
# TLS_DHE_RSA_WITH_AES_256_CBC_SHA (0x39)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS 256
# TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA (0x88)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS    256
# TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 (0x9e)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS  128
# TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 (0x67)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS  128
# TLS_DHE_RSA_WITH_AES_128_CBC_SHA (0x33)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS 128
# TLS_DHE_RSA_WITH_SEED_CBC_SHA (0x9a)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS    128
# TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA (0x45)   DH 1024 bits (p: 128, g: 1, Ys: 128)   FS    128
# TLS_RSA_WITH_RC4_128_SHA (0x5)  128
#
# This configuration requires mod_headers, mod_ssl, it binds to TCP port 443, it only
# logs errors, and disables the server signature.
#
# The version of OpenSSL should 1.0.1d or higher.
# 


NameVirtualHost 1.2.3.4:443
<VirtualHost 1.2.3.4:443>

    ServerAdmin webmaster@example.com
    ServerName www.example.com
    ServerAlias wiki.example.com example.com

    SSLEngine on
    SSLCertificateFile /etc/apache2/ssl/www.example.com.crt
    SSLCertificateKeyFile /etc/apache2/ssl/www.example.com.key

    SSLProtocol all -SSLv2 -SSLv3
    SSLCipherSuite SSLCipherSuite EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS
    SSLHonorCipherOrder on
    SSLCompression off

    # Add six earth month HSTS header for all users...
    Header add Strict-Transport-Security "max-age=15768000"
    # If you want to protect all subdomains, use the following header
    # Strict-Transport-Security: max-age=15768000 ; includeSubDomains

    DocumentRoot /var/www/https-root/

    ErrorLog /var/log/apache2/https-error.log

    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel warn

    ServerSignature Off

</VirtualHost>
