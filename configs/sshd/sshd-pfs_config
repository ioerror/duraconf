# COMPATIBILITY
# The below options are compatible with OpenSSH 6.6+, PuTTY 0.64+, and AbsoluteTelnet 9.84+ (RC10 at 2015-03-09)

# Specify strong key exchange algorithms; preferrably curve25519, but allow DHG-SHA256 for compatibility
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256

# Specify strong ciphers: chacha or aes256-GCM for authenticated encryption; aes256-CTR for compatibility
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes256-ctr

# Specify strong MAC's, preferring Encrypt-then-MAC methods; strong SHA2 for compatibility
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

# Restrict incoming connections to authenticate with Pubkey authentication only
# Uncomment once you've created and tested your public & private keys
# PasswordAuthentication no

# Only allow members of the ssh-user group to connect to this server
# Uncomment once you've created an ssh-user group and added expected users to the group
# AllowGroups ssh-user

# Limit the grace time for logins to as short as possible in your situation.
# For fast connections & pubkey authentication, this can go down to ~5 seconds
# Warning: a low grace time can make slow connections timeout before the connection is completed
LoginGraceTime 30

# Prevent the root user from accessing SSH.
PermitRootLogin no

# Disable SSHv1
Protocol 2

# Make sure that file permissions for private & public key files are safe
StrictModes yes

# Prevent privilege escalation - keeps any corruption within an unprivileged processes
UsePrivilegeSeparation yes

# PAM enables ChallengeResponseAuthentication and PasswordAuthentication; disable to leave only Pubkey enabled
UsePAM no
